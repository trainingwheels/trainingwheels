##
# Ansible playbook for setting up a Training Wheels controller on an
# Ubuntu 12.04 server that is already setup as a student server.
#

---
- hosts: all
  gather_facts: False

  vars:
    phpfpm_home: '/home/phpfpm'
    twdir: '/var/trainingwheels'

  vars_files:
    - settings.yml

  tasks:
    ##
    # Setup a user for nginx
    #
    - name: Create nginx group
      action: group name=nginx system=yes

    - name: Create a user for nginx otherwise www-data is shared with Apache
      action: user name=nginx group=nginx createhome=no system=yes

    ##
    # Setup a user for php-fpm
    #
    - name: Create phpfpm group
      action: group name=phpfpm system=yes

    - name: Create a user for phpfpm
      action: user name=phpfpm group=phpfpm createhome=yes home=$phpfpm_home system=yes shell=/bin/false

    - name: Create phpfpm home
      action: file path=$phpfpm_home state=directory owner=phpfpm group=phpfpm mode=700

    - name: Private tmp directory for php-fpm needed by Training Wheels
      action: file path=$phpfpm_home/tmp state=directory owner=phpfpm group=phpfpm mode=700

    - name: Copy MySQL config from root so phpfpm can easily administer the database
      action: shell cp /root/.my.cnf $phpfpm_home/.my.cnf creates=$phpfpm_home/.my.cnf

    - name: Check permissions of MySQL config
      action: file path=$phpfpm_home/.my.cnf owner=phpfpm group=phpfpm mode=600

    ##
    # Apt package installation of required software.
    #
    - name: Install required packages.
      action: apt pkg=$item state=installed

      with_items:
        - nginx
        - php5-fpm
        - php5-intl
        - unzip
        - python-mysqldb
        - curl

    ##
    # Configuration for php-fpm
    #
    - name: Configure php-fpm
      action: template src=templates/etc-php5-fpm-pool-d-www-conf.j2 dest=/etc/php5/fpm/pool.d/www.conf

    - name: PHP configuration file php.ini for php-fpm
      action: template src=templates/etc-php5-fpm-php-ini.j2 dest=/etc/php5/fpm/php.ini

    - name: Sudoers file allowing the phpfpm user to administer the server
      action: copy src=files/etc-sudoers-d-phpfpm dest=/etc/sudoers.d/phpfpm mode=0440

    ##
    # Configuration for MongoDB database
    #
    - name: Install the PECL MongoDB extension
      action: command pecl install mongo creates=/usr/lib/php5/20090626/mongo.so

    - name: Configure PHP to use PECL MongoDB extension
      action: copy dest=/etc/php5/conf.d/mongo.ini src=files/etc-php5-conf-d-mongo-ini

    ##
    # Configuration for nginx
    #
    - name: Add mime types for nginx including our font type WOFF
      action: copy src=files/etc-nginx-mime-types dest=/etc/nginx/mime.types

    - name: Configure nginx
      action: template src=templates/etc-nginx-nginx-conf.j2 dest=/etc/nginx/nginx.conf

    - name: Remove default site
      action: file path=/etc/nginx/sites-enabled/default state=absent

    - name: Copy our nginx site configuration
      action: template src=templates/etc-nginx-sites-available-twcontrol.j2 dest=/etc/nginx/sites-available/twcontrol

    - name: Make site available
      action: file dest=/etc/nginx/sites-enabled/twcontrol state=link src=/etc/nginx/sites-available/twcontrol

    ##
    # Install Composer to build Training Wheels
    #
    - name: Install Composer - create directory
      action: file path=/usr/local/bin state=directory owner=root group=root

    - name: Install Composer
      action: shell curl -s https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin creates=/usr/local/bin/composer.phar

    - name: Install dependencies
      action: command composer.phar install -d $twdir/controller/ creates=$twdir/controller/vendor

    ##
    # Handy shortcuts
    #
    - name: Link to the webroot
      action: file state=link src=$twdir/controller/web dest=$admin_user_home/tw-webroot

    - name: Link to the CLI application
      action: file state=link src=$twdir/controller/cli/tw dest=/usr/local/bin/tw

    - name: Link to the Training Wheels directory
      action: file state=link src=$twdir dest=$admin_user_home/trainingwheels

    ##
    # Restart services
    #
    - name: Restart nginx
      action: service name=nginx state=restarted

    - name: Restart php-fpm
      action: service name=php5-fpm state=restarted
